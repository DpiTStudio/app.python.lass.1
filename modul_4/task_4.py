# Вася набрался опыта и решил поискать вакансию с большей зарплатой. Его привлекла вакансия со странной формулой для расчёта заработной платы.
# Он хочет понять, сколько часов нужно отработать, чтобы хватило на погашение кредита и еду.
# В переменных hours, credit и food хранятся:
# - количество отработанных часов — hours,
# - остаток по кредиту — credit,
# - количество денег на еду — food.
# Напишите программу, которая рассчитывает зарплату по формуле:
# Если зарплата больше или равна сумме, которая требуется на кредит и еду, то выводится сообщение: Часов хватает. Можно отдохнуть. В противном случае: Часов не хватает. Придётся работать больше!
# Важно! Следите за форматом вывода, который необходим в задаче. Программа автоматически проверяет код, поэтому важно оформить его правильно. Тесты будут считаться неудачными, если в словах есть опечатки, неправильно расставлены отступы, некорректно использованы буквы Е и Ё. Рекомендуем вам копировать текст сообщений из задачи и следить за тем, чтобы вывод был разделён на строки.

# Пример 1
# На входе:
# hours = 80
# credit = 1000
# food = 5000
# На выходе:
# Часов не хватает. Придётся поработать!

# Пример 2
# На входе:
# hours = 180
# credit = 1000
# food = 3000
# На выходе:
# Часов хватает. Можно отдохнуть.

# Подсказка № 1
# Алгоритм действий в программе:
# Рассчитайте зарплату в переменной salary. Формула вычисления зарплаты строится так: 200 умножается на количество отработанных часов (hours), и результат делится на 2³. Это значение прибавляется к количеству отработанных часов.
# Сравните полученную зарплату (salary) с суммой, необходимой на погашение кредита (credit) и покупку еды (food).
# Если зарплата больше или равна этому выражению, выведите сообщение: Часов хватает. Можно отдохнуть.
# Иначе выведите сообщение: Часов не хватает. Придётся поработать!
# Обратите внимание на необходимость правильного использования табуляции (отступов) при использовании условного оператора.

# Подсказка № 2
# Убедитесь, что вы закомментировали переменные hours, credit и food перед отправкой кода на проверку.
# Проверьте, что вы не использовали функцию input().
# Тесты тренажёра могут считаться неудачными, если вы некорректно оформили вывод программы. Например, использовали букву Е вместо Ё.

# Перед выполнением кода раскомментируйте переменные hours, credit и food (то есть удалите символ комментария # из строк 4, 5 и 6). Это позволит вам протестировать свой код на разных значениях переменной.
# Перед отправкой кода на проверку снова закомментируйте эти строки — система сама подставит разные значения для проверки вашего кода.

hours = 80
credit = 1000
food = 5000

# Рассчитайте зарплату по формуле в строке ниже. 
salary = 200 * hours / 2 ** 3 + hours

# Далее выполните проверку условия о достаточности зарплаты для оплаты кредита и еды. Обеспечьте корректный вывод соответствующего сообщения.
if salary >= credit + food:
# Этот вывод используйте, когда часов будет хватать.
    print('Часов хватает. Можно отдохнуть.')
else:
# Этот вывод используйте, когда часов не будет хватать.
    print('Часов не хватает. Придётся поработать!')